%h1.page-header.happy-caption API documentation

%h2.happy-caption Search for an address

:markdown
  Simply send a address to the geocoder with the string as **query** parameter:

.code= CodeRay.scan("http://happy-geoco.de/api/geocode?query=Bruesseler%20Strasse%2055,%2050672%20Koeln", :html).div.html_safe

:markdown
  The result will be an array list of geocoded addresses. Each address has a qualifier that
  explains the quality of the match.

.code= CodeRay.scan("[{\n  \"street_name\": \"Bruesseler Strasse\",\n  \"street_number\": \"55\",\n  \"zip\": \"50672\",\n  \"city\": \"KÃ¶ln\",\n  \"state\": \"NRW\",\n  \"country\": \"Germany\",\n  \"lat\": 50.937966,\n  \"lon\": 6.934578,\n  \"accuracy\": \"exact\",\n  \"accuracy_face\": \":D\"\n}]", :json).div.html_safe

:markdown
  Most of the fields are self explanitory. If the match is not exact, the result array will contain several entries.

  The **accuray** field is a hint about the quality of the geocoordinates. Possible values are:

%table.accuracy_explained.table.table-striped
  %thead
    %tr
      %th.accuracy_value
        Value
      %th
        Meaning
      %th.accurracy_happyface
        Accurracy face
  %tbody
    %tr
      %td.code_column
        exact
      %td
        Perfect match for the address
      %td.code_column
        \:D
    %tr
      %td.code_column
        street
      %td
        The street could be found, but we didn't find a match for the street number
      %td.code_column
        \:)
    %tr
      %td.code_column
        city
      %td
        We didn't find the street and give you the center of the city as a result
      %td.code_column
        \:O
    %tr
      %td.code_column
        zip
      %td
        We didn't find the street, but we have the center of that zip code area and give it to you instead
      %td.code_column
        \:/
    %tr
      %td.code_column
        wild_guess
      %td
        Okay, we found something, but this is most likely wrong
      %td.code_column
        \:(

%p
  Please mind the accuracy_face field - it displays the accuracy level in a not-boring way
  = happy_face
