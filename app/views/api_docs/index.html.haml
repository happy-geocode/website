%h1.page-header.happy-caption API documentation

%h2 Search for address

%p
  :markdown
    Simply send a address to the geocoder with the string as **query** parameter:

.code= CodeRay.scan("http://happy-geoco.de/api/geocode?query=Bruesseler%20Strasse%2055,%2050672%20Koeln", :html).div.html_safe

%p
  :markdown
    The result will be an array list of geocoded addresses. Each address has a qualifier that
    explains the quality of the match.

.code= CodeRay.scan("[{\n  \"street_name\": \"Bruesseler Strasse\",\n  \"street_number\": \"55\",\n  \"zip\": \"50672\",\n  \"city\": \"KÃ¶ln\",\n  \"state\": \"NRW\",\n  \"country\": \"Germany\",\n  \"lat\": 50.937966,\n  \"lng\": 6.934578,\n  \"accuracy\": \"exact\",\n  \"accuracy_face\": \":)\"\n}]", :json).div.html_safe

%p
  :markdown
    Most of the fields are self explanitory. If the match is not exact, several results will be return in that array.

    The **accuray** field is a hint about the quality of the geocoordinates. Possible values are:

%table.accuracy_explained.table.table-striped
  %thead
    %tr
      %th.accuracy_value
        Value
      %th
        Meaning
  %tbody
    %tr
      %td
        exact
      %td
        perfect match for the address
    %tr
      %td
        street
      %td
        the street could be found, but we didn't find a match for the street number
    %tr
      %td
        city
      %td
        we didn't find the street and give you the center of the city as a result
    %tr
      %td
        zip
      %td
        we didn't find the street, but we have the center of that zip code area and give it to you instead
    %tr
      %td
        wild_guess
      %td
        okay, we found something, but this is most possibly wrong

%p
  Additionally we provide you with a accuracy-face that displays the accuracy in a nicer way :) .
